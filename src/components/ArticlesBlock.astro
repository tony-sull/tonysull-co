---
import path from 'node:path'
import ArticlePreview from './ArticlePreview.astro'
import Icon from './Icon.astro'

const { title, ids } = Astro.props as CMS.UI.ArticlesBlock

function sortArticles(a: CMS.Article, b: CMS.Article) {
  const aDate = new Date(a.published_date)
  const bDate = new Date(b.published_date)
  return bDate - aDate
}

const allArticles = Astro.fetchContent('../data/articles/*.md')
  .reduce((acc, data) => {
    const { astro, file, url, ...article } = data

    if (!article.draft) {
      const key = path.basename(file.pathname).replace(path.extname(file.pathname), '')
      acc.set(key, article)
    }

    return acc
  }, new Map())

console.log(allArticles.keys())

const articles = !!ids
  ? ids.map(id => allArticles.get(id)).filter(Boolean)
  : Array
    .from(allArticles.values())
    .sort(sortArticles)
---

<section>
  {title && (
    <h2>{title}</h2>
  )}

  <ol>
    {articles.map((article) => (
      <li>
        <ArticlePreview article={article} />
      </li>
    ))}
  </ol>

  <a href='/blog'>
    See All Posts
    <Icon icon='arrow-right' size='32' />
  </a>
</section>

<style lang="scss">
  h2 {
    font-size: var(--chisel-h4);
  }

  ol {
    list-style: none;
    display: grid;
    grid-template-columns: 1fr;
    gap: 4rem;
  }

  a {
    font-size: var(--chisel-h5);
    text-decoration: none;
    font-weight: 700;
    display: flex;
    align-items: center;
    justify-content: end;

    & :global(svg) {
      margin-left: var(--spacer-xs);
      will-change: transfrom;
      transition: transform 150ms ease;
    }

    &:hover :global(svg) {
      transform: translateX(var(--spacer-sm));
    }
  }

  @media (min-width: 979px) {
    ol {
      grid-template-columns: repeat(auto-fill, minmax(50ch, 1fr));
    }
  }
</style>